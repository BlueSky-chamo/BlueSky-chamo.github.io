<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Hexo+Github搭建个人博客（二）]]></title>
      <url>%2F2017%2F03%2F29%2Fhexo-github-two%2F</url>
      <content type="text"><![CDATA[##安装NEXT主题 ###下载主题Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。&gt; cd bloggit clone https://github.com/iissnan/hexo-theme-next themes/next ###启用next主题在站点配置文件_config.yml中：theme: next ###验证主题 hexo shttp://localhost:4000 ##NEXT主题设置Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，主要用于配置主题相关的选项。前者称为 站点配置文件，后者称为 主题配置文件 ###基本设置关于NEXT主题的基本设置可参考NEXT在线文档，包含NEXT主题的详细使用介绍。 ###其他设置 ####添加High一下打开博客根目录 \themes\next\layout\_partials\header.swig ，在&lt;ul&gt; ... /ul&gt; 标签之间加入以下代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;li&gt; &lt;a title="把这个链接拖到你的Chrome收藏夹工具栏中" href='javascript:(function() &#123; function c() &#123; var e = document.createElement("link"); e.setAttribute("type", "text/css"); e.setAttribute("rel", "stylesheet"); e.setAttribute("href", f); e.setAttribute("class", l); document.body.appendChild(e) &#125; function h() &#123; var e = document.getElementsByClassName(l); for (var t = 0; t &lt; e.length; t++) &#123; document.body.removeChild(e[t]) &#125; &#125; function p() &#123; var e = document.createElement("div"); e.setAttribute("class", a); document.body.appendChild(e); setTimeout(function() &#123; document.body.removeChild(e) &#125;, 100) &#125; function d(e) &#123; return &#123; height : e.offsetHeight, width : e.offsetWidth &#125; &#125; function v(i) &#123; var s = d(i); return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r &#125; function m(e) &#123; var t = e; var n = 0; while (!!t) &#123; n += t.offsetTop; t = t.offsetParent &#125; return n &#125; function g() &#123; var e = document.documentElement; if (!!window.innerWidth) &#123; return window.innerHeight &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123; return e.clientHeight &#125; return 0 &#125; function y() &#123; if (window.pageYOffset) &#123; return window.pageYOffset &#125; return Math.max(document.documentElement.scrollTop, document.body.scrollTop) &#125; function E(e) &#123; var t = m(e); return t &gt;= w &amp;&amp; t &lt;= b + w &#125; function S() &#123; var e = document.createElement("audio"); e.setAttribute("class", l); e.src = i; e.loop = false; e.addEventListener("canplay", function() &#123; setTimeout(function() &#123; x(k) &#125;, 500); setTimeout(function() &#123; N(); p(); for (var e = 0; e &lt; O.length; e++) &#123; T(O[e]) &#125; &#125;, 15500) &#125;, true); e.addEventListener("ended", function() &#123; N(); h() &#125;, true); e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"; document.body.appendChild(e); e.play() &#125; function x(e) &#123; e.className += " " + s + " " + o &#125; function T(e) &#123; e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)] &#125; function N() &#123; var e = document.getElementsByClassName(s); var t = new RegExp("\\b" + s + "\\b"); for (var n = 0; n &lt; e.length; ) &#123; e[n].className = e[n].className.replace(t, "") &#125; &#125; var e = 30; var t = 30; var n = 350; var r = 350; var i = "//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3"; var s = "mw-harlem_shake_me"; var o = "im_first"; var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"]; var a = "mw-strobe_light"; var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css"; var l = "mw_added_css"; var b = g(); var w = y(); var C = document.getElementsByTagName("*"); var k = null; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; if (E(A)) &#123; k = A; break &#125; &#125; &#125; if (A === null) &#123; console.warn("Could not find a node of the right size. Please try a different page."); return &#125; c(); S(); var O = []; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; O.push(A) &#125; &#125; &#125;)() '&gt;High一下&lt;/a&gt; &lt;/li&gt; ####添加最近访客 在主题配置文件中menu项添加guestbook菜单 在Hexo的source文件夹下，利用hexo new page guestbook创建guestbook页面,对应的index文件中添加如下代码：12最近访客 &lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;39&quot; data-avatar-size=&quot;40&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt; ####修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。找到文件 themes\next\source\css\_custom\custom.styl ，添加如下 css 样式：12345678.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125; 给 Github 添加 README默认情况下，Github中每一个项目，我们希望有一份 README.md 的文件来作为项目的说明，但是我们在项目根目录下的 blog\source 目录下创建一份 README.md 文件，写好说明介绍，部署的时候，这个 README.md 会被 hexo 解析掉，而不会被解析到 Github 中去的。正确的解决方法其实很简单： 把 README.md 文件的后缀名改成 “MDOWN” 然后扔到blog/source文件夹下即可，这样 hexo 不会解析，Github 也会将其作为 MD 文件解析。 ####插入网易云音乐如果只加入单曲，只需要搜索歌曲，点开歌曲名，点击生成外链播放器，复制html代码将html代码无需任何修改放入markdown文章里就OK了。 如果想要加入歌单，就需要自己创建歌单，然后分享歌单，找到自己的分享动态，点进去可以看到有“生成外链播放器”这些字眼，其余操作就和上面一样了。 ##参考Never_yu’s Blog]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo+github搭建个人博客（一）]]></title>
      <url>%2F2016%2F03%2F29%2Fhexo-github-one%2F</url>
      <content type="text"><![CDATA[简介Hexo 是一个快速、简洁且高效的静态站点生成框架，它基于 Node.js 。 它有以下特点：1. 超快速度**：Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。 2. 支持Markdown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 3. 一件部署：只需一条指令即可部署到Github Pages，或其他网站 4. 丰富的插件：**Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade,CoffeeScript。 安装准备工作安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序: Node.jsGit 安装 Git Windows： git下载地址： 官网Download Now 安装：在Git Setup中选择Use Git from the windows Command Prompt,除此之外一路Next完成安装 安装 Node.js Windos:Node.js v0.12.5 x64 :下载地址： 百度云Download Now Node.js官网Download Now 安装：一路NExt即可，等待完成安装 ##软件验证运行窗口CMD,输入一下命令，会显示相应版本信息： git --version node -v npm -v##申请GITHUB申请地址：Github方法简述： 申请账号（用户名+密码),并进行邮箱验证 创建repository，名字与用户名一致。例如我的用户名BlueSky-chamo,Repository name为BlueSky-chamo.github.io 在创建的repository中settings中的Github pages中选择theme,启用Github page## 安装 Hexohexo是基于node.js的静态博客，官网也是搭建在GitHub上安装方法： 新建文件夹blog,右键选择Git Bash 安装hexo为了避免出现被“墙”，使用淘宝NPM镜像npm install -g cnpm --registry=https://registry.npm.taobao.org 安装hexo:cnpm install -g hexo-clicnpm install hexo --save 验证：hexo -v 本地运行：初始化命令：hexo init安装生成器：cnpm install浏览器本地访问：hexo s,本地浏览器输入http://localhost:4000/即可本地访问##hexo基本管理###目录结构12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── _config.yml：站点配置文件，即博客基本设置source:资源文件，即自定义的页面与推送的博客文件 ###_config.yml文件关键配置： url: 博客地址，与github申请的repository一致 如：http://BlueSky-chamo.github.io theme: 博客主题。默认下为landscape deploy: 发布设置。两种方式如下，可自行选择repository: https://github.com/BlueSky-chamo/BlueSky-chamo.github.io.gitrepository: git@github.com:BlueSky-chamo/BlueSky-chamo.github.io.git###source文件资源文件 新建文章hexo new &quot;hello&quot;2.新建页面hexo new page hello ##Github与hexo创建联系 ###配置SSH KEY 生成SSH KEY：ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; 按提示输入密码后在C:\Documents and Settings\Administrator.ssh\id_rsa.pub文件的内容即为秘钥 登陆github系统，点击右上角的 Account Settings—&gt;SSH Public keys —&gt; add another public keys把你本地生成的密钥复制到里面（key文本框中）###设置git身份信息git config --global user.name &quot;你的用户名&quot;git config --global user.email &quot;你的邮箱&quot;###验证git信息SSH -T git@github.com ##发布博客 ###安装hexo git插件cnpm install hexo-deployer-git --save ###发布更新博客hexo d -g ##参考零基础免费搭建个人博客]]></content>
    </entry>

    
  
  
</search>
